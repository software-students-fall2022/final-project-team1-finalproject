name: web scraper workflow

on:
  pull_request:
    branches: [ main ]

jobs:
  scrapertest:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: ./web-scraper
    timeout-minutes: 6
    strategy:
      matrix:
        os: [windows-latest]
        python-version: ['3.9']

    steps:
      - name: check out repo code
        uses: actions/checkout@v3
      - name: set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: install python packages
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest
          pip install pytest-cov
          pip install pytest-flask
      
      - name: 'Create env file'
        run: |
          echo '${{ secrets.ENV_FILE }}' > .env
      
      - name: execute unit tests
        run: |
          pytest --cov

  docker:
    needs: scrapertest
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ./web-scraper
          push: true
          tags: aleolazabal/final_web_scraper:latest
  deploy:
    needs: docker
    runs-on: unbuntu-latest
    steps:
      -
        name: Checkout files
        uses: actions/checkout@v3
      -
        name: Get tag name
        uses: olegtarasov/get-tag@v2
      -
        name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{secrets.DIGITALOCEAN_TOKEN}}
      - 
        name: Provision Droplet and deploy container
        run: doctl compute droplet create "$GIT_TAG_NAME" --image docker-18-04 --size s-1vcpu-1gb --region nyc1 

    